<UserControl x:Class="StockApp.UI.Views.NavigationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:conv="clr-namespace:StockApp.UI.Converters"
             mc:Ignorable="d">

    <d:DesignerProperties.DesignStyle x:Name="designBackground">
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Width" Value="600"/>
            <Setter Property="Height" Value="800"/>
        </Style>
    </d:DesignerProperties.DesignStyle>

    <UserControl.Resources>

        <Style TargetType="RadioButton" x:Key="RadioButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                Padding="15 10">

                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#FFF0810F"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15 20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock Text="{TemplateBinding Content}" 
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   TextAlignment="Center"
                                   Padding="15 20"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <TextBlock Text="{TemplateBinding Content}" 
                                           HorizontalAlignment="Stretch" 
                                           VerticalAlignment="Stretch"
                                           TextAlignment="Center"
                                           Background="#FFF0810F"
                                           Foreground="#FF011A27"
                                           Padding="15 20"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <conv:GroupSelectorConverter x:Key="GroupSelectorConverter"/>
        <conv:IsIntValueEqualParameterConverter x:Key="IsIntValueEqualParameterConverter"/>

    </UserControl.Resources>

    <Grid VerticalAlignment="Stretch"
          Background="#FF063852">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Vertical">
            <Button Content="Turnier Daten" Command="{Binding NavigateTurnierCommand}"/>

            <Button Content="Wettbewerbsart" Command="{Binding NavigateContestCommand}"/>

            <ContentControl Content="{Binding CurrentNavigationViewModel}"/>

            <Button Content="StockTV" Command="{Binding NavigateStockTVsCommand}"/>
        </StackPanel>

        <Grid Grid.Row="1" VerticalAlignment="Bottom" 
              Visibility="{Binding Groups, Converter={StaticResource GroupSelectorConverter}, ConverterParameter=2, UpdateSourceTrigger=PropertyChanged}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <RadioButton  Content="1"  Grid.Row="0" Grid.Column="0" Style="{StaticResource RadioButtonStyle}" 
                          IsChecked="{Binding CurrentTeamBewerbId, Converter={StaticResource IsIntValueEqualParameterConverter}, ConverterParameter=1, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                          Command="{Binding Path=SelectGroupCommand}" CommandParameter="1"/>
            <RadioButton  Content="2"  Grid.Row="0" Grid.Column="1" Style="{StaticResource RadioButtonStyle}"
                          IsChecked="{Binding CurrentTeamBewerbId, Converter={StaticResource IsIntValueEqualParameterConverter}, ConverterParameter=2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                          Command="{Binding Path=SelectGroupCommand}" CommandParameter="2"/>
            <RadioButton  Content="3"  Grid.Row="1" Grid.Column="0" Style="{StaticResource RadioButtonStyle}"
                          IsChecked="{Binding CurrentTeamBewerbId, Converter={StaticResource IsIntValueEqualParameterConverter}, ConverterParameter=3, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                          Command="{Binding Path=SelectGroupCommand}" CommandParameter="3"
                          Visibility="{Binding Groups, Converter={StaticResource GroupSelectorConverter}, ConverterParameter=3, UpdateSourceTrigger=PropertyChanged}"/>
            <RadioButton  Content="4"  Grid.Row="1" Grid.Column="1" Style="{StaticResource RadioButtonStyle}"
                          IsChecked="{Binding CurrentTeamBewerbId, Converter={StaticResource IsIntValueEqualParameterConverter}, ConverterParameter=4, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                          Command="{Binding Path=SelectGroupCommand}" CommandParameter="4"
                          Visibility="{Binding Groups, Converter={StaticResource GroupSelectorConverter}, ConverterParameter=4, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
    </Grid>


</UserControl>
