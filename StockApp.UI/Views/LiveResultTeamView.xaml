<Window x:Class="StockApp.UI.Views.LiveResultTeamView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:StockApp.Lib.Converters;assembly=StockApp.Lib"
        xmlns:libVm="clr-namespace:StockApp.Lib.ViewModels;assembly=StockApp.Lib"
        xmlns:libVw="clr-namespace:StockApp.Lib.Views;assembly=StockApp.Lib"
        xmlns:vm="clr-namespace:StockApp.UI.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vm:LiveResultsTeamViewModel, IsDesignTimeCreatable=True}"
        x:Name="LiveResultTeamViewWindow"
        Title="{Binding WindowTitle}" Height="450" Width="800">

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Closed">
            <b:InvokeCommandAction Command="{Binding CloseCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <conv:BooleanToVisibilityInvertedConverter x:Key="BooleanToVisibilityInvertedConverter"/>

        <DataTemplate DataType="{x:Type libVm:BestOfDetailViewModel}">
            <libVw:BestOfDetailView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type libVm:RankedTeamsTableViewModel}">
            <libVw:RankedTeamsTableView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type libVm:RankedClubTableViewModel}">
            <libVw:RankedClubTableView/>
        </DataTemplate>

        <Style x:Key="ColumnElementLeftAlignStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="TextAlignment" Value="Left"/>
        </Style>

        <Style x:Key="ColumnElementCenterAlignStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Viewbox VerticalAlignment="Top" Margin="10" Grid.Row="0" HorizontalAlignment="Stretch">

            <StackPanel Orientation="Vertical">

                <DataGrid ItemsSource="{Binding Path=RankedTeamList, Mode=OneWay}"
                          Visibility="{Binding Path=IsSplitGruppe,Converter={StaticResource BooleanToVisibilityInvertedConverter}}"
                          HorizontalAlignment="Center"
                          RowHeaderWidth="0"
                          IsReadOnly="True"
                          Margin="0"
                          CanUserSortColumns="False"
                          AutoGenerateColumns="False">

                    <DataGrid.Columns>

                        <DataGridTextColumn Header="Rang" x:Name="dgcRank"
                                            ElementStyle="{StaticResource ColumnElementCenterAlignStyle}"
                                            Binding="{Binding Rank}"/>

                        <DataGridTextColumn Header="Name" x:Name="dgcName"
                                            ElementStyle="{StaticResource ColumnElementLeftAlignStyle}"
                                            Binding="{Binding TeamName}"/>

                        <DataGridTextColumn Header="Punkte" x:Name="dgcPunkte"
                                            ElementStyle="{StaticResource ColumnElementCenterAlignStyle}"
                                            Binding="{Binding SpielPunkte}"/>


                        <DataGridTextColumn Header="Stocknote" x:Name="dgcStocknote"
                                            ElementStyle="{StaticResource ColumnElementCenterAlignStyle}"
                                            Binding="{Binding StockNote}"
                                            Visibility="{Binding Path=IsChecked, 
                                                                 Source={x:Reference radioButtonIERVersion2022},
                                                                 Converter={StaticResource BooleanToVisibilityInvertedConverter}}"/>


                        <DataGridTextColumn Header="Differenz" x:Name="dgcDifferenz"
                                            ElementStyle="{StaticResource ColumnElementCenterAlignStyle}"
                                            Binding="{Binding StockPunkteDifferenz}"
                                            Visibility="{Binding Path=IsChecked, 
                                                                 Source={x:Reference radioButtonIERVersion2022},
                                                                 Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <DataGridTextColumn Header="Stockpunkte" x:Name="dgcStockpunkte"
                                            ElementStyle="{StaticResource ColumnElementCenterAlignStyle}"
                                            Binding="{Binding StockPunkte}"
                                            Visibility="{Binding Path=IsChecked, 
                                                                 Source={x:Reference checkBoxShowStockPunkte},
                                                                 Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    </DataGrid.Columns>

                </DataGrid>

                <!--<StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsSplitGruppe, Converter={StaticResource BooleanToVisibilityConverter}}">-->
                <ContentControl Content="{Binding Path=RankedTeamsTableSplitGroupOneViewModel}"
                                Visibility="{Binding Path=IsSplitGruppe,Converter={StaticResource BooleanToVisibilityConverter}}"
                                HorizontalAlignment="Stretch"
                                Margin="5"/>
                <ContentControl Content="{Binding Path=RankedTeamsTableSplitGroupTwoViewModel}"
                                Visibility="{Binding Path=IsSplitGruppe,Converter={StaticResource BooleanToVisibilityConverter}}"
                                HorizontalAlignment="Stretch"
                                Margin="5"/>
                <!--</StackPanel>-->

                <ContentControl Content="{Binding Path=BestOfDetailsViewModel}" 
                                HorizontalAlignment="Stretch" 
                                Margin="0 20 0 0"
                                Visibility="{Binding Path=IsBestOf, Converter={StaticResource BooleanToVisibilityConverter}}"/>


                <ContentControl Content="{Binding Path=RankedClubTableViewModel}"
                                HorizontalAlignment="Stretch"
                                Margin="0"
                                Visibility="{Binding Path=IsVergleich, Converter={StaticResource BooleanToVisibilityConverter}}"/>

            </StackPanel>

        </Viewbox>

        <WrapPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">

            <RadioButton IsChecked="{Binding Path=IERVersion2022, Mode=OneWay}"
                         Content="Wertung nach IER 2022"
                         x:Name="radioButtonIERVersion2022"
                         HorizontalAlignment="Stretch"
                         HorizontalContentAlignment="Left"
                         VerticalAlignment="Stretch"
                         VerticalContentAlignment="Center"
                         IsEnabled="False"
                         Margin="10" Padding="10"/>

            <CheckBox IsChecked="{Binding Path=ShowStockPunkte, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Content="StockPunkte"
                      x:Name="checkBoxShowStockPunkte"
                      HorizontalAlignment="Stretch"
                      HorizontalContentAlignment="Left"
                      VerticalAlignment="Stretch"
                      VerticalContentAlignment="Center"
                      Margin="10" Padding="10" IsThreeState="False"/>

            <CheckBox IsChecked="{Binding Path=IsLive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Content="Refresh nach jeder Kehre" 
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      HorizontalContentAlignment="Left"
                      VerticalContentAlignment="Center"
                      Margin="10" Padding="10" IsThreeState="False"/>
            <CheckBox IsChecked="{Binding Path=IsVergleich, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Content="Vergleich"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      VerticalContentAlignment="Center"
                      Visibility="{Binding Path=IsVergleichPossible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                      Margin="10" Padding="10" IsThreeState="False"/>
            <CheckBox IsChecked="{Binding Path=IsBestOf, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Content="BestOf"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      VerticalContentAlignment="Center"
                      Visibility="{Binding Path=IsBestOfPossible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                      Margin="10" Padding="10" IsThreeState="False"/>
            <Button Content="Close" 
                Command="{Binding Path=CloseCommand}"
                Margin="10" Padding="20,10" HorizontalAlignment="Right"/>

        </WrapPanel>

    </Grid>
</Window>
